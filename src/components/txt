<template>
  <v-main
    class="primary"
  >
    <v-app-bar
      :elevation="0"
      class="fill-height primary"
      height="64"
    >
      <v-app-bar-nav-icon @click="callbacks.toggleDrawer()"></v-app-bar-nav-icon>
      <v-text-field
        class="ml-2"
        hide-details
        dense
        solo
        single-line
        v-model="message"
        clearable
        label="Search"
        type="text"
      ></v-text-field>
    </v-app-bar>
    <v-main
      class="overflow-hidden list-body"
      data-booted="true"
      max-height="100"
    >
      <div class="c-sidebar">
        <v-list-item
          v-for="(chat, index) in chat_list"
          :key="index"
          :disabled="chat.id === selected_chat"
          :class="chat.id === selected_chat ? 'primary lighten-1' : null"
          link
          @click="() => {
            callbacks.openChat(chat)
            selected_chat = chat.id
            setMessagesCount()
            setMessages(chat.id)
          }"
        >
          <v-avatar
            class="mr-2 my-2"
            color="grey darken-1"
            size="52"
          ></v-avatar>

          <v-list-item-content>
            <v-list-item-title>{{ chat.title }}</v-list-item-title>
            <v-list-item-subtitle single-line>{{ '' }}</v-list-item-subtitle>
          </v-list-item-content>
        </v-list-item>
      </div>
    </v-main>
  </v-main>
  
</template>

<script>
import { mapGetters, mapActions } from 'vuex'

export default {
  data () {
    return {
      message: null,
      selected_chat: null,
    }
  },
  computed: {
    ...mapGetters('chat', {
      chat_list: 'GET_CHAT_LIST',
      rooms_count: 'GET_ROOMS_COUNT'
    }),
    ...mapGetters('user', {
      user: 'GET_PROFILE'
    }),
  },
  methods: {
    ...mapActions('chat', {
      setChatList: 'SET_CHAT_LIST',
      setMessages: 'SET_MESSAGES',
      setMessagesCount: 'SET_MESSAGES_COUNT',
      appendChat: 'APPEND_CHAT'
    })
  },
  created () {
    this.setChatList()
  },
  mounted () {
    window.Echo.channel(`user_${this.user['id']}`)
      .listen('Rooms', (e) => {
        this.appendChat(e)
      })
  },
  props: ['callbacks']
}
</script>

<style scoped>
  .list-body {
    height: calc(100vh - 64px);
    overflow: hidden;
  }
  
  .scrollable {
    overflow-y: auto;
    height: 100%;
  }

</style>